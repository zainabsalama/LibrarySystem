// <auto-generated />
using System;
using LibrarySystem.APIs.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibrarySystem.DAL.Migrations
{
    [DbContext(typeof(SystemContext))]
    [Migration("20230603093631_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibrarySystem.APIs.DAL.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("NumOfCopies")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 1001,
                            NumOfCopies = 5,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 2,
                            Code = 2002,
                            NumOfCopies = 10,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 3,
                            Code = 3003,
                            NumOfCopies = 30,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 4,
                            Code = 4004,
                            NumOfCopies = 20,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 5,
                            Code = 5005,
                            NumOfCopies = 8,
                            Title = "The Catcher in the Rye"
                        },
                        new
                        {
                            Id = 6,
                            Code = 6006,
                            NumOfCopies = 14,
                            Title = "Moby-Dick"
                        },
                        new
                        {
                            Id = 7,
                            Code = 7007,
                            NumOfCopies = 16,
                            Title = "To the Lighthouse"
                        },
                        new
                        {
                            Id = 8,
                            Code = 8008,
                            NumOfCopies = 17,
                            Title = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 9,
                            Code = 9009,
                            NumOfCopies = 12,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 10,
                            Code = 10010,
                            NumOfCopies = 9,
                            Title = "The Odyssey"
                        });
                });

            modelBuilder.Entity("LibrarySystem.APIs.DAL.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 1001,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Code = 2002,
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            Code = 3003,
                            Name = "Michael Johnson"
                        },
                        new
                        {
                            Id = 4,
                            Code = 4004,
                            Name = "Emily Brown"
                        },
                        new
                        {
                            Id = 5,
                            Code = 5005,
                            Name = "David Wilson"
                        });
                });

            modelBuilder.Entity("LibrarySystem.DAL.Borrowing", b =>
                {
                    b.Property<int>("BorrowingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowingId"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRetrieved")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCopies")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RetrievalDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BorrowingId");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("Borrows");

                    b.HasData(
                        new
                        {
                            BorrowingId = 1,
                            BookId = 1,
                            BorrowingDate = new DateTime(2023, 6, 3, 12, 36, 31, 177, DateTimeKind.Local).AddTicks(5832),
                            IsRetrieved = false,
                            MemberId = 1,
                            NumberOfCopies = 2
                        },
                        new
                        {
                            BorrowingId = 2,
                            BookId = 3,
                            BorrowingDate = new DateTime(2023, 5, 29, 12, 36, 31, 177, DateTimeKind.Local).AddTicks(5846),
                            IsRetrieved = false,
                            MemberId = 2,
                            NumberOfCopies = 4
                        });
                });

            modelBuilder.Entity("LibrarySystem.DAL.Borrowing", b =>
                {
                    b.HasOne("LibrarySystem.APIs.DAL.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibrarySystem.APIs.DAL.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
